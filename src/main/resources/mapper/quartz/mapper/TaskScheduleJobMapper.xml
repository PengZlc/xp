<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yaao.ps10.quartz.mapper.TaskScheduleJobMapper">
  <resultMap id="BaseResultMap" type="com.yaao.ps10.quartz.model.TaskScheduleJob">
    <id column="Job_ID" jdbcType="BIGINT" property="jobId" />
    <result column="Create_Time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="Update_Time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="Job_Name" jdbcType="VARCHAR" property="jobName" />
    <result column="Job_Group" jdbcType="VARCHAR" property="jobGroup" />
    <result column="Job_Status" jdbcType="VARCHAR" property="jobStatus" />
    <result column="Cron_Expression" jdbcType="VARCHAR" property="cronExpression" />
    <result column="Description" jdbcType="VARCHAR" property="description" />
    <result column="Bean_Class" jdbcType="VARCHAR" property="beanClass" />
    <result column="IsConcurrent" jdbcType="VARCHAR" property="isconcurrent" />
    <result column="Spring_Id" jdbcType="VARCHAR" property="springId" />
    <result column="Method_Name" jdbcType="VARCHAR" property="methodName" />
    <result column="Job_Tyle" jdbcType="VARCHAR" property="jobTyle" />
    <result column="Job_SubType" jdbcType="VARCHAR" property="jobSubtype" />
    <result column="ACT_ID" jdbcType="VARCHAR" property="actId" />
    <result column="Period" jdbcType="INTEGER" property="period" />
    <result column="ValidUserID" jdbcType="INTEGER" property="validuserid" />
    <result column="Duty_Cycle" jdbcType="INTEGER" property="dutyCycle" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.yaao.ps10.quartz.model.TaskScheduleJob">
    <result column="Room_ID" jdbcType="LONGNVARCHAR" property="roomId" />
    <result column="Team_ID" jdbcType="LONGNVARCHAR" property="teamId" />
    <result column="Member_ID" jdbcType="LONGNVARCHAR" property="memberId" />
    <result column="DeviceType_ID" jdbcType="LONGNVARCHAR" property="devicetypeId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    Job_ID, Create_Time, Update_Time, Job_Name, Job_Group, Job_Status, Cron_Expression, 
    Description, Bean_Class, IsConcurrent, Spring_Id, Method_Name, Job_Tyle, Job_SubType, 
    ACT_ID, Period, ValidUserID, Duty_Cycle
  </sql>
  <sql id="Blob_Column_List">
    Room_ID, Team_ID, Member_ID, DeviceType_ID
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.yaao.ps10.quartz.model.TaskScheduleJobExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from Task_Schedule_Job
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.yaao.ps10.quartz.model.TaskScheduleJobExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from Task_Schedule_Job
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from Task_Schedule_Job
    where Job_ID = #{jobId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from Task_Schedule_Job
    where Job_ID = #{jobId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.yaao.ps10.quartz.model.TaskScheduleJobExample">
    delete from Task_Schedule_Job
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yaao.ps10.quartz.model.TaskScheduleJob">
    insert into Task_Schedule_Job (Job_ID, Create_Time, Update_Time, 
      Job_Name, Job_Group, Job_Status, 
      Cron_Expression, Description, Bean_Class, 
      IsConcurrent, Spring_Id, Method_Name, 
      Job_Tyle, Job_SubType, ACT_ID, 
      Period, ValidUserID, Duty_Cycle, 
      Room_ID, Team_ID, Member_ID, 
      DeviceType_ID)
    values (#{jobId,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{jobName,jdbcType=VARCHAR}, #{jobGroup,jdbcType=VARCHAR}, #{jobStatus,jdbcType=VARCHAR}, 
      #{cronExpression,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, #{beanClass,jdbcType=VARCHAR}, 
      #{isconcurrent,jdbcType=VARCHAR}, #{springId,jdbcType=VARCHAR}, #{methodName,jdbcType=VARCHAR}, 
      #{jobTyle,jdbcType=VARCHAR}, #{jobSubtype,jdbcType=VARCHAR}, #{actId,jdbcType=VARCHAR}, 
      #{period,jdbcType=INTEGER}, #{validuserid,jdbcType=INTEGER}, #{dutyCycle,jdbcType=INTEGER}, 
      #{roomId,jdbcType=LONGNVARCHAR}, #{teamId,jdbcType=LONGNVARCHAR}, #{memberId,jdbcType=LONGNVARCHAR}, 
      #{devicetypeId,jdbcType=LONGNVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.yaao.ps10.quartz.model.TaskScheduleJob">
    insert into Task_Schedule_Job
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="jobId != null">
        Job_ID,
      </if>
      <if test="createTime != null">
        Create_Time,
      </if>
      <if test="updateTime != null">
        Update_Time,
      </if>
      <if test="jobName != null">
        Job_Name,
      </if>
      <if test="jobGroup != null">
        Job_Group,
      </if>
      <if test="jobStatus != null">
        Job_Status,
      </if>
      <if test="cronExpression != null">
        Cron_Expression,
      </if>
      <if test="description != null">
        Description,
      </if>
      <if test="beanClass != null">
        Bean_Class,
      </if>
      <if test="isconcurrent != null">
        IsConcurrent,
      </if>
      <if test="springId != null">
        Spring_Id,
      </if>
      <if test="methodName != null">
        Method_Name,
      </if>
      <if test="jobTyle != null">
        Job_Tyle,
      </if>
      <if test="jobSubtype != null">
        Job_SubType,
      </if>
      <if test="actId != null">
        ACT_ID,
      </if>
      <if test="period != null">
        Period,
      </if>
      <if test="validuserid != null">
        ValidUserID,
      </if>
      <if test="dutyCycle != null">
        Duty_Cycle,
      </if>
      <if test="roomId != null">
        Room_ID,
      </if>
      <if test="teamId != null">
        Team_ID,
      </if>
      <if test="memberId != null">
        Member_ID,
      </if>
      <if test="devicetypeId != null">
        DeviceType_ID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="jobId != null">
        #{jobId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="jobName != null">
        #{jobName,jdbcType=VARCHAR},
      </if>
      <if test="jobGroup != null">
        #{jobGroup,jdbcType=VARCHAR},
      </if>
      <if test="jobStatus != null">
        #{jobStatus,jdbcType=VARCHAR},
      </if>
      <if test="cronExpression != null">
        #{cronExpression,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="beanClass != null">
        #{beanClass,jdbcType=VARCHAR},
      </if>
      <if test="isconcurrent != null">
        #{isconcurrent,jdbcType=VARCHAR},
      </if>
      <if test="springId != null">
        #{springId,jdbcType=VARCHAR},
      </if>
      <if test="methodName != null">
        #{methodName,jdbcType=VARCHAR},
      </if>
      <if test="jobTyle != null">
        #{jobTyle,jdbcType=VARCHAR},
      </if>
      <if test="jobSubtype != null">
        #{jobSubtype,jdbcType=VARCHAR},
      </if>
      <if test="actId != null">
        #{actId,jdbcType=VARCHAR},
      </if>
      <if test="period != null">
        #{period,jdbcType=INTEGER},
      </if>
      <if test="validuserid != null">
        #{validuserid,jdbcType=INTEGER},
      </if>
      <if test="dutyCycle != null">
        #{dutyCycle,jdbcType=INTEGER},
      </if>
      <if test="roomId != null">
        #{roomId,jdbcType=LONGNVARCHAR},
      </if>
      <if test="teamId != null">
        #{teamId,jdbcType=LONGNVARCHAR},
      </if>
      <if test="memberId != null">
        #{memberId,jdbcType=LONGNVARCHAR},
      </if>
      <if test="devicetypeId != null">
        #{devicetypeId,jdbcType=LONGNVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yaao.ps10.quartz.model.TaskScheduleJobExample" resultType="java.lang.Long">
    select count(*) from Task_Schedule_Job
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update Task_Schedule_Job
    <set>
      <if test="record.jobId != null">
        Job_ID = #{record.jobId,jdbcType=BIGINT},
      </if>
      <if test="record.createTime != null">
        Create_Time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        Update_Time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.jobName != null">
        Job_Name = #{record.jobName,jdbcType=VARCHAR},
      </if>
      <if test="record.jobGroup != null">
        Job_Group = #{record.jobGroup,jdbcType=VARCHAR},
      </if>
      <if test="record.jobStatus != null">
        Job_Status = #{record.jobStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.cronExpression != null">
        Cron_Expression = #{record.cronExpression,jdbcType=VARCHAR},
      </if>
      <if test="record.description != null">
        Description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.beanClass != null">
        Bean_Class = #{record.beanClass,jdbcType=VARCHAR},
      </if>
      <if test="record.isconcurrent != null">
        IsConcurrent = #{record.isconcurrent,jdbcType=VARCHAR},
      </if>
      <if test="record.springId != null">
        Spring_Id = #{record.springId,jdbcType=VARCHAR},
      </if>
      <if test="record.methodName != null">
        Method_Name = #{record.methodName,jdbcType=VARCHAR},
      </if>
      <if test="record.jobTyle != null">
        Job_Tyle = #{record.jobTyle,jdbcType=VARCHAR},
      </if>
      <if test="record.jobSubtype != null">
        Job_SubType = #{record.jobSubtype,jdbcType=VARCHAR},
      </if>
      <if test="record.actId != null">
        ACT_ID = #{record.actId,jdbcType=VARCHAR},
      </if>
      <if test="record.period != null">
        Period = #{record.period,jdbcType=INTEGER},
      </if>
      <if test="record.validuserid != null">
        ValidUserID = #{record.validuserid,jdbcType=INTEGER},
      </if>
      <if test="record.dutyCycle != null">
        Duty_Cycle = #{record.dutyCycle,jdbcType=INTEGER},
      </if>
      <if test="record.roomId != null">
        Room_ID = #{record.roomId,jdbcType=LONGNVARCHAR},
      </if>
      <if test="record.teamId != null">
        Team_ID = #{record.teamId,jdbcType=LONGNVARCHAR},
      </if>
      <if test="record.memberId != null">
        Member_ID = #{record.memberId,jdbcType=LONGNVARCHAR},
      </if>
      <if test="record.devicetypeId != null">
        DeviceType_ID = #{record.devicetypeId,jdbcType=LONGNVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update Task_Schedule_Job
    set Job_ID = #{record.jobId,jdbcType=BIGINT},
      Create_Time = #{record.createTime,jdbcType=TIMESTAMP},
      Update_Time = #{record.updateTime,jdbcType=TIMESTAMP},
      Job_Name = #{record.jobName,jdbcType=VARCHAR},
      Job_Group = #{record.jobGroup,jdbcType=VARCHAR},
      Job_Status = #{record.jobStatus,jdbcType=VARCHAR},
      Cron_Expression = #{record.cronExpression,jdbcType=VARCHAR},
      Description = #{record.description,jdbcType=VARCHAR},
      Bean_Class = #{record.beanClass,jdbcType=VARCHAR},
      IsConcurrent = #{record.isconcurrent,jdbcType=VARCHAR},
      Spring_Id = #{record.springId,jdbcType=VARCHAR},
      Method_Name = #{record.methodName,jdbcType=VARCHAR},
      Job_Tyle = #{record.jobTyle,jdbcType=VARCHAR},
      Job_SubType = #{record.jobSubtype,jdbcType=VARCHAR},
      ACT_ID = #{record.actId,jdbcType=VARCHAR},
      Period = #{record.period,jdbcType=INTEGER},
      ValidUserID = #{record.validuserid,jdbcType=INTEGER},
      Duty_Cycle = #{record.dutyCycle,jdbcType=INTEGER},
      Room_ID = #{record.roomId,jdbcType=LONGNVARCHAR},
      Team_ID = #{record.teamId,jdbcType=LONGNVARCHAR},
      Member_ID = #{record.memberId,jdbcType=LONGNVARCHAR},
      DeviceType_ID = #{record.devicetypeId,jdbcType=LONGNVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update Task_Schedule_Job
    set Job_ID = #{record.jobId,jdbcType=BIGINT},
      Create_Time = #{record.createTime,jdbcType=TIMESTAMP},
      Update_Time = #{record.updateTime,jdbcType=TIMESTAMP},
      Job_Name = #{record.jobName,jdbcType=VARCHAR},
      Job_Group = #{record.jobGroup,jdbcType=VARCHAR},
      Job_Status = #{record.jobStatus,jdbcType=VARCHAR},
      Cron_Expression = #{record.cronExpression,jdbcType=VARCHAR},
      Description = #{record.description,jdbcType=VARCHAR},
      Bean_Class = #{record.beanClass,jdbcType=VARCHAR},
      IsConcurrent = #{record.isconcurrent,jdbcType=VARCHAR},
      Spring_Id = #{record.springId,jdbcType=VARCHAR},
      Method_Name = #{record.methodName,jdbcType=VARCHAR},
      Job_Tyle = #{record.jobTyle,jdbcType=VARCHAR},
      Job_SubType = #{record.jobSubtype,jdbcType=VARCHAR},
      ACT_ID = #{record.actId,jdbcType=VARCHAR},
      Period = #{record.period,jdbcType=INTEGER},
      ValidUserID = #{record.validuserid,jdbcType=INTEGER},
      Duty_Cycle = #{record.dutyCycle,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.yaao.ps10.quartz.model.TaskScheduleJob">
    update Task_Schedule_Job
    <set>
      <if test="createTime != null">
        Create_Time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        Update_Time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="jobName != null">
        Job_Name = #{jobName,jdbcType=VARCHAR},
      </if>
      <if test="jobGroup != null">
        Job_Group = #{jobGroup,jdbcType=VARCHAR},
      </if>
      <if test="jobStatus != null">
        Job_Status = #{jobStatus,jdbcType=VARCHAR},
      </if>
      <if test="cronExpression != null">
        Cron_Expression = #{cronExpression,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        Description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="beanClass != null">
        Bean_Class = #{beanClass,jdbcType=VARCHAR},
      </if>
      <if test="isconcurrent != null">
        IsConcurrent = #{isconcurrent,jdbcType=VARCHAR},
      </if>
      <if test="springId != null">
        Spring_Id = #{springId,jdbcType=VARCHAR},
      </if>
      <if test="methodName != null">
        Method_Name = #{methodName,jdbcType=VARCHAR},
      </if>
      <if test="jobTyle != null">
        Job_Tyle = #{jobTyle,jdbcType=VARCHAR},
      </if>
      <if test="jobSubtype != null">
        Job_SubType = #{jobSubtype,jdbcType=VARCHAR},
      </if>
      <if test="actId != null">
        ACT_ID = #{actId,jdbcType=VARCHAR},
      </if>
      <if test="period != null">
        Period = #{period,jdbcType=INTEGER},
      </if>
      <if test="validuserid != null">
        ValidUserID = #{validuserid,jdbcType=INTEGER},
      </if>
      <if test="dutyCycle != null">
        Duty_Cycle = #{dutyCycle,jdbcType=INTEGER},
      </if>
      <if test="roomId != null">
        Room_ID = #{roomId,jdbcType=LONGNVARCHAR},
      </if>
      <if test="teamId != null">
        Team_ID = #{teamId,jdbcType=LONGNVARCHAR},
      </if>
      <if test="memberId != null">
        Member_ID = #{memberId,jdbcType=LONGNVARCHAR},
      </if>
      <if test="devicetypeId != null">
        DeviceType_ID = #{devicetypeId,jdbcType=LONGNVARCHAR},
      </if>
    </set>
    where Job_ID = #{jobId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.yaao.ps10.quartz.model.TaskScheduleJob">
    update Task_Schedule_Job
    set Create_Time = #{createTime,jdbcType=TIMESTAMP},
      Update_Time = #{updateTime,jdbcType=TIMESTAMP},
      Job_Name = #{jobName,jdbcType=VARCHAR},
      Job_Group = #{jobGroup,jdbcType=VARCHAR},
      Job_Status = #{jobStatus,jdbcType=VARCHAR},
      Cron_Expression = #{cronExpression,jdbcType=VARCHAR},
      Description = #{description,jdbcType=VARCHAR},
      Bean_Class = #{beanClass,jdbcType=VARCHAR},
      IsConcurrent = #{isconcurrent,jdbcType=VARCHAR},
      Spring_Id = #{springId,jdbcType=VARCHAR},
      Method_Name = #{methodName,jdbcType=VARCHAR},
      Job_Tyle = #{jobTyle,jdbcType=VARCHAR},
      Job_SubType = #{jobSubtype,jdbcType=VARCHAR},
      ACT_ID = #{actId,jdbcType=VARCHAR},
      Period = #{period,jdbcType=INTEGER},
      ValidUserID = #{validuserid,jdbcType=INTEGER},
      Duty_Cycle = #{dutyCycle,jdbcType=INTEGER},
      Room_ID = #{roomId,jdbcType=LONGNVARCHAR},
      Team_ID = #{teamId,jdbcType=LONGNVARCHAR},
      Member_ID = #{memberId,jdbcType=LONGNVARCHAR},
      DeviceType_ID = #{devicetypeId,jdbcType=LONGNVARCHAR}
    where Job_ID = #{jobId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yaao.ps10.quartz.model.TaskScheduleJob">
    update Task_Schedule_Job
    set Create_Time = #{createTime,jdbcType=TIMESTAMP},
      Update_Time = #{updateTime,jdbcType=TIMESTAMP},
      Job_Name = #{jobName,jdbcType=VARCHAR},
      Job_Group = #{jobGroup,jdbcType=VARCHAR},
      Job_Status = #{jobStatus,jdbcType=VARCHAR},
      Cron_Expression = #{cronExpression,jdbcType=VARCHAR},
      Description = #{description,jdbcType=VARCHAR},
      Bean_Class = #{beanClass,jdbcType=VARCHAR},
      IsConcurrent = #{isconcurrent,jdbcType=VARCHAR},
      Spring_Id = #{springId,jdbcType=VARCHAR},
      Method_Name = #{methodName,jdbcType=VARCHAR},
      Job_Tyle = #{jobTyle,jdbcType=VARCHAR},
      Job_SubType = #{jobSubtype,jdbcType=VARCHAR},
      ACT_ID = #{actId,jdbcType=VARCHAR},
      Period = #{period,jdbcType=INTEGER},
      ValidUserID = #{validuserid,jdbcType=INTEGER},
      Duty_Cycle = #{dutyCycle,jdbcType=INTEGER}
    where Job_ID = #{jobId,jdbcType=BIGINT}
  </update>
  <resultMap id="BaseResultMap" type="com.yaao.ps10.quartz.model.TaskScheduleJob">
    <id column="Job_ID" jdbcType="BIGINT" property="jobId" />
    <result column="Create_Time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="Update_Time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="Job_Name" jdbcType="VARCHAR" property="jobName" />
    <result column="Job_Group" jdbcType="VARCHAR" property="jobGroup" />
    <result column="Job_Status" jdbcType="VARCHAR" property="jobStatus" />
    <result column="Cron_Expression" jdbcType="VARCHAR" property="cronExpression" />
    <result column="Description" jdbcType="VARCHAR" property="description" />
    <result column="Bean_Class" jdbcType="VARCHAR" property="beanClass" />
    <result column="IsConcurrent" jdbcType="VARCHAR" property="isconcurrent" />
    <result column="Spring_Id" jdbcType="VARCHAR" property="springId" />
    <result column="Method_Name" jdbcType="VARCHAR" property="methodName" />
    <result column="Job_Tyle" jdbcType="VARCHAR" property="jobTyle" />
    <result column="Job_SubType" jdbcType="VARCHAR" property="jobSubtype" />
    <result column="ACT_ID" jdbcType="VARCHAR" property="actId" />
    <result column="Period" jdbcType="INTEGER" property="period" />
    <result column="ValidUserID" jdbcType="INTEGER" property="validuserid" />
    <result column="Duty_Cycle" jdbcType="INTEGER" property="dutyCycle" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.yaao.ps10.quartz.model.TaskScheduleJob">
    <result column="Room_ID" jdbcType="LONGNVARCHAR" property="roomId" />
    <result column="Team_ID" jdbcType="LONGNVARCHAR" property="teamId" />
    <result column="Member_ID" jdbcType="LONGNVARCHAR" property="memberId" />
    <result column="DeviceType_ID" jdbcType="LONGNVARCHAR" property="devicetypeId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    Job_ID, Create_Time, Update_Time, Job_Name, Job_Group, Job_Status, Cron_Expression, 
    Description, Bean_Class, IsConcurrent, Spring_Id, Method_Name, Job_Tyle, Job_SubType, 
    ACT_ID, Period, ValidUserID, Duty_Cycle
  </sql>
  <sql id="Blob_Column_List">
    Room_ID, Team_ID, Member_ID, DeviceType_ID
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.yaao.ps10.quartz.model.TaskScheduleJobExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from Task_Schedule_Job
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.yaao.ps10.quartz.model.TaskScheduleJobExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from Task_Schedule_Job
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from Task_Schedule_Job
    where Job_ID = #{jobId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from Task_Schedule_Job
    where Job_ID = #{jobId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.yaao.ps10.quartz.model.TaskScheduleJobExample">
    delete from Task_Schedule_Job
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yaao.ps10.quartz.model.TaskScheduleJob">
    insert into Task_Schedule_Job (Job_ID, Create_Time, Update_Time, 
      Job_Name, Job_Group, Job_Status, 
      Cron_Expression, Description, Bean_Class, 
      IsConcurrent, Spring_Id, Method_Name, 
      Job_Tyle, Job_SubType, ACT_ID, 
      Period, ValidUserID, Duty_Cycle, 
      Room_ID, Team_ID, Member_ID, 
      DeviceType_ID)
    values (#{jobId,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{jobName,jdbcType=VARCHAR}, #{jobGroup,jdbcType=VARCHAR}, #{jobStatus,jdbcType=VARCHAR}, 
      #{cronExpression,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, #{beanClass,jdbcType=VARCHAR}, 
      #{isconcurrent,jdbcType=VARCHAR}, #{springId,jdbcType=VARCHAR}, #{methodName,jdbcType=VARCHAR}, 
      #{jobTyle,jdbcType=VARCHAR}, #{jobSubtype,jdbcType=VARCHAR}, #{actId,jdbcType=VARCHAR}, 
      #{period,jdbcType=INTEGER}, #{validuserid,jdbcType=INTEGER}, #{dutyCycle,jdbcType=INTEGER}, 
      #{roomId,jdbcType=LONGNVARCHAR}, #{teamId,jdbcType=LONGNVARCHAR}, #{memberId,jdbcType=LONGNVARCHAR}, 
      #{devicetypeId,jdbcType=LONGNVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.yaao.ps10.quartz.model.TaskScheduleJob">
    insert into Task_Schedule_Job
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="jobId != null">
        Job_ID,
      </if>
      <if test="createTime != null">
        Create_Time,
      </if>
      <if test="updateTime != null">
        Update_Time,
      </if>
      <if test="jobName != null">
        Job_Name,
      </if>
      <if test="jobGroup != null">
        Job_Group,
      </if>
      <if test="jobStatus != null">
        Job_Status,
      </if>
      <if test="cronExpression != null">
        Cron_Expression,
      </if>
      <if test="description != null">
        Description,
      </if>
      <if test="beanClass != null">
        Bean_Class,
      </if>
      <if test="isconcurrent != null">
        IsConcurrent,
      </if>
      <if test="springId != null">
        Spring_Id,
      </if>
      <if test="methodName != null">
        Method_Name,
      </if>
      <if test="jobTyle != null">
        Job_Tyle,
      </if>
      <if test="jobSubtype != null">
        Job_SubType,
      </if>
      <if test="actId != null">
        ACT_ID,
      </if>
      <if test="period != null">
        Period,
      </if>
      <if test="validuserid != null">
        ValidUserID,
      </if>
      <if test="dutyCycle != null">
        Duty_Cycle,
      </if>
      <if test="roomId != null">
        Room_ID,
      </if>
      <if test="teamId != null">
        Team_ID,
      </if>
      <if test="memberId != null">
        Member_ID,
      </if>
      <if test="devicetypeId != null">
        DeviceType_ID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="jobId != null">
        #{jobId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="jobName != null">
        #{jobName,jdbcType=VARCHAR},
      </if>
      <if test="jobGroup != null">
        #{jobGroup,jdbcType=VARCHAR},
      </if>
      <if test="jobStatus != null">
        #{jobStatus,jdbcType=VARCHAR},
      </if>
      <if test="cronExpression != null">
        #{cronExpression,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="beanClass != null">
        #{beanClass,jdbcType=VARCHAR},
      </if>
      <if test="isconcurrent != null">
        #{isconcurrent,jdbcType=VARCHAR},
      </if>
      <if test="springId != null">
        #{springId,jdbcType=VARCHAR},
      </if>
      <if test="methodName != null">
        #{methodName,jdbcType=VARCHAR},
      </if>
      <if test="jobTyle != null">
        #{jobTyle,jdbcType=VARCHAR},
      </if>
      <if test="jobSubtype != null">
        #{jobSubtype,jdbcType=VARCHAR},
      </if>
      <if test="actId != null">
        #{actId,jdbcType=VARCHAR},
      </if>
      <if test="period != null">
        #{period,jdbcType=INTEGER},
      </if>
      <if test="validuserid != null">
        #{validuserid,jdbcType=INTEGER},
      </if>
      <if test="dutyCycle != null">
        #{dutyCycle,jdbcType=INTEGER},
      </if>
      <if test="roomId != null">
        #{roomId,jdbcType=LONGNVARCHAR},
      </if>
      <if test="teamId != null">
        #{teamId,jdbcType=LONGNVARCHAR},
      </if>
      <if test="memberId != null">
        #{memberId,jdbcType=LONGNVARCHAR},
      </if>
      <if test="devicetypeId != null">
        #{devicetypeId,jdbcType=LONGNVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yaao.ps10.quartz.model.TaskScheduleJobExample" resultType="java.lang.Long">
    select count(*) from Task_Schedule_Job
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update Task_Schedule_Job
    <set>
      <if test="record.jobId != null">
        Job_ID = #{record.jobId,jdbcType=BIGINT},
      </if>
      <if test="record.createTime != null">
        Create_Time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        Update_Time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.jobName != null">
        Job_Name = #{record.jobName,jdbcType=VARCHAR},
      </if>
      <if test="record.jobGroup != null">
        Job_Group = #{record.jobGroup,jdbcType=VARCHAR},
      </if>
      <if test="record.jobStatus != null">
        Job_Status = #{record.jobStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.cronExpression != null">
        Cron_Expression = #{record.cronExpression,jdbcType=VARCHAR},
      </if>
      <if test="record.description != null">
        Description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.beanClass != null">
        Bean_Class = #{record.beanClass,jdbcType=VARCHAR},
      </if>
      <if test="record.isconcurrent != null">
        IsConcurrent = #{record.isconcurrent,jdbcType=VARCHAR},
      </if>
      <if test="record.springId != null">
        Spring_Id = #{record.springId,jdbcType=VARCHAR},
      </if>
      <if test="record.methodName != null">
        Method_Name = #{record.methodName,jdbcType=VARCHAR},
      </if>
      <if test="record.jobTyle != null">
        Job_Tyle = #{record.jobTyle,jdbcType=VARCHAR},
      </if>
      <if test="record.jobSubtype != null">
        Job_SubType = #{record.jobSubtype,jdbcType=VARCHAR},
      </if>
      <if test="record.actId != null">
        ACT_ID = #{record.actId,jdbcType=VARCHAR},
      </if>
      <if test="record.period != null">
        Period = #{record.period,jdbcType=INTEGER},
      </if>
      <if test="record.validuserid != null">
        ValidUserID = #{record.validuserid,jdbcType=INTEGER},
      </if>
      <if test="record.dutyCycle != null">
        Duty_Cycle = #{record.dutyCycle,jdbcType=INTEGER},
      </if>
      <if test="record.roomId != null">
        Room_ID = #{record.roomId,jdbcType=LONGNVARCHAR},
      </if>
      <if test="record.teamId != null">
        Team_ID = #{record.teamId,jdbcType=LONGNVARCHAR},
      </if>
      <if test="record.memberId != null">
        Member_ID = #{record.memberId,jdbcType=LONGNVARCHAR},
      </if>
      <if test="record.devicetypeId != null">
        DeviceType_ID = #{record.devicetypeId,jdbcType=LONGNVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update Task_Schedule_Job
    set Job_ID = #{record.jobId,jdbcType=BIGINT},
      Create_Time = #{record.createTime,jdbcType=TIMESTAMP},
      Update_Time = #{record.updateTime,jdbcType=TIMESTAMP},
      Job_Name = #{record.jobName,jdbcType=VARCHAR},
      Job_Group = #{record.jobGroup,jdbcType=VARCHAR},
      Job_Status = #{record.jobStatus,jdbcType=VARCHAR},
      Cron_Expression = #{record.cronExpression,jdbcType=VARCHAR},
      Description = #{record.description,jdbcType=VARCHAR},
      Bean_Class = #{record.beanClass,jdbcType=VARCHAR},
      IsConcurrent = #{record.isconcurrent,jdbcType=VARCHAR},
      Spring_Id = #{record.springId,jdbcType=VARCHAR},
      Method_Name = #{record.methodName,jdbcType=VARCHAR},
      Job_Tyle = #{record.jobTyle,jdbcType=VARCHAR},
      Job_SubType = #{record.jobSubtype,jdbcType=VARCHAR},
      ACT_ID = #{record.actId,jdbcType=VARCHAR},
      Period = #{record.period,jdbcType=INTEGER},
      ValidUserID = #{record.validuserid,jdbcType=INTEGER},
      Duty_Cycle = #{record.dutyCycle,jdbcType=INTEGER},
      Room_ID = #{record.roomId,jdbcType=LONGNVARCHAR},
      Team_ID = #{record.teamId,jdbcType=LONGNVARCHAR},
      Member_ID = #{record.memberId,jdbcType=LONGNVARCHAR},
      DeviceType_ID = #{record.devicetypeId,jdbcType=LONGNVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update Task_Schedule_Job
    set Job_ID = #{record.jobId,jdbcType=BIGINT},
      Create_Time = #{record.createTime,jdbcType=TIMESTAMP},
      Update_Time = #{record.updateTime,jdbcType=TIMESTAMP},
      Job_Name = #{record.jobName,jdbcType=VARCHAR},
      Job_Group = #{record.jobGroup,jdbcType=VARCHAR},
      Job_Status = #{record.jobStatus,jdbcType=VARCHAR},
      Cron_Expression = #{record.cronExpression,jdbcType=VARCHAR},
      Description = #{record.description,jdbcType=VARCHAR},
      Bean_Class = #{record.beanClass,jdbcType=VARCHAR},
      IsConcurrent = #{record.isconcurrent,jdbcType=VARCHAR},
      Spring_Id = #{record.springId,jdbcType=VARCHAR},
      Method_Name = #{record.methodName,jdbcType=VARCHAR},
      Job_Tyle = #{record.jobTyle,jdbcType=VARCHAR},
      Job_SubType = #{record.jobSubtype,jdbcType=VARCHAR},
      ACT_ID = #{record.actId,jdbcType=VARCHAR},
      Period = #{record.period,jdbcType=INTEGER},
      ValidUserID = #{record.validuserid,jdbcType=INTEGER},
      Duty_Cycle = #{record.dutyCycle,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.yaao.ps10.quartz.model.TaskScheduleJob">
    update Task_Schedule_Job
    <set>
      <if test="createTime != null">
        Create_Time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        Update_Time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="jobName != null">
        Job_Name = #{jobName,jdbcType=VARCHAR},
      </if>
      <if test="jobGroup != null">
        Job_Group = #{jobGroup,jdbcType=VARCHAR},
      </if>
      <if test="jobStatus != null">
        Job_Status = #{jobStatus,jdbcType=VARCHAR},
      </if>
      <if test="cronExpression != null">
        Cron_Expression = #{cronExpression,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        Description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="beanClass != null">
        Bean_Class = #{beanClass,jdbcType=VARCHAR},
      </if>
      <if test="isconcurrent != null">
        IsConcurrent = #{isconcurrent,jdbcType=VARCHAR},
      </if>
      <if test="springId != null">
        Spring_Id = #{springId,jdbcType=VARCHAR},
      </if>
      <if test="methodName != null">
        Method_Name = #{methodName,jdbcType=VARCHAR},
      </if>
      <if test="jobTyle != null">
        Job_Tyle = #{jobTyle,jdbcType=VARCHAR},
      </if>
      <if test="jobSubtype != null">
        Job_SubType = #{jobSubtype,jdbcType=VARCHAR},
      </if>
      <if test="actId != null">
        ACT_ID = #{actId,jdbcType=VARCHAR},
      </if>
      <if test="period != null">
        Period = #{period,jdbcType=INTEGER},
      </if>
      <if test="validuserid != null">
        ValidUserID = #{validuserid,jdbcType=INTEGER},
      </if>
      <if test="dutyCycle != null">
        Duty_Cycle = #{dutyCycle,jdbcType=INTEGER},
      </if>
      <if test="roomId != null">
        Room_ID = #{roomId,jdbcType=LONGNVARCHAR},
      </if>
      <if test="teamId != null">
        Team_ID = #{teamId,jdbcType=LONGNVARCHAR},
      </if>
      <if test="memberId != null">
        Member_ID = #{memberId,jdbcType=LONGNVARCHAR},
      </if>
      <if test="devicetypeId != null">
        DeviceType_ID = #{devicetypeId,jdbcType=LONGNVARCHAR},
      </if>
    </set>
    where Job_ID = #{jobId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.yaao.ps10.quartz.model.TaskScheduleJob">
    update Task_Schedule_Job
    set Create_Time = #{createTime,jdbcType=TIMESTAMP},
      Update_Time = #{updateTime,jdbcType=TIMESTAMP},
      Job_Name = #{jobName,jdbcType=VARCHAR},
      Job_Group = #{jobGroup,jdbcType=VARCHAR},
      Job_Status = #{jobStatus,jdbcType=VARCHAR},
      Cron_Expression = #{cronExpression,jdbcType=VARCHAR},
      Description = #{description,jdbcType=VARCHAR},
      Bean_Class = #{beanClass,jdbcType=VARCHAR},
      IsConcurrent = #{isconcurrent,jdbcType=VARCHAR},
      Spring_Id = #{springId,jdbcType=VARCHAR},
      Method_Name = #{methodName,jdbcType=VARCHAR},
      Job_Tyle = #{jobTyle,jdbcType=VARCHAR},
      Job_SubType = #{jobSubtype,jdbcType=VARCHAR},
      ACT_ID = #{actId,jdbcType=VARCHAR},
      Period = #{period,jdbcType=INTEGER},
      ValidUserID = #{validuserid,jdbcType=INTEGER},
      Duty_Cycle = #{dutyCycle,jdbcType=INTEGER},
      Room_ID = #{roomId,jdbcType=LONGNVARCHAR},
      Team_ID = #{teamId,jdbcType=LONGNVARCHAR},
      Member_ID = #{memberId,jdbcType=LONGNVARCHAR},
      DeviceType_ID = #{devicetypeId,jdbcType=LONGNVARCHAR}
    where Job_ID = #{jobId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yaao.ps10.quartz.model.TaskScheduleJob">
    update Task_Schedule_Job
    set Create_Time = #{createTime,jdbcType=TIMESTAMP},
      Update_Time = #{updateTime,jdbcType=TIMESTAMP},
      Job_Name = #{jobName,jdbcType=VARCHAR},
      Job_Group = #{jobGroup,jdbcType=VARCHAR},
      Job_Status = #{jobStatus,jdbcType=VARCHAR},
      Cron_Expression = #{cronExpression,jdbcType=VARCHAR},
      Description = #{description,jdbcType=VARCHAR},
      Bean_Class = #{beanClass,jdbcType=VARCHAR},
      IsConcurrent = #{isconcurrent,jdbcType=VARCHAR},
      Spring_Id = #{springId,jdbcType=VARCHAR},
      Method_Name = #{methodName,jdbcType=VARCHAR},
      Job_Tyle = #{jobTyle,jdbcType=VARCHAR},
      Job_SubType = #{jobSubtype,jdbcType=VARCHAR},
      ACT_ID = #{actId,jdbcType=VARCHAR},
      Period = #{period,jdbcType=INTEGER},
      ValidUserID = #{validuserid,jdbcType=INTEGER},
      Duty_Cycle = #{dutyCycle,jdbcType=INTEGER}
    where Job_ID = #{jobId,jdbcType=BIGINT}
  </update>
  <resultMap id="BaseResultMap" type="com.yaao.ps10.quartz.model.TaskScheduleJob">
    <id column="Job_ID" jdbcType="BIGINT" property="jobId" />
    <result column="Create_Time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="Update_Time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="Job_Name" jdbcType="VARCHAR" property="jobName" />
    <result column="Job_Group" jdbcType="VARCHAR" property="jobGroup" />
    <result column="Job_Status" jdbcType="VARCHAR" property="jobStatus" />
    <result column="Cron_Expression" jdbcType="VARCHAR" property="cronExpression" />
    <result column="Description" jdbcType="VARCHAR" property="description" />
    <result column="Bean_Class" jdbcType="VARCHAR" property="beanClass" />
    <result column="IsConcurrent" jdbcType="VARCHAR" property="isconcurrent" />
    <result column="Spring_Id" jdbcType="VARCHAR" property="springId" />
    <result column="Method_Name" jdbcType="VARCHAR" property="methodName" />
    <result column="Job_Tyle" jdbcType="VARCHAR" property="jobTyle" />
    <result column="Job_SubType" jdbcType="VARCHAR" property="jobSubtype" />
    <result column="ACT_ID" jdbcType="VARCHAR" property="actId" />
    <result column="Period" jdbcType="INTEGER" property="period" />
    <result column="ValidUserID" jdbcType="INTEGER" property="validuserid" />
    <result column="Duty_Cycle" jdbcType="INTEGER" property="dutyCycle" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.yaao.ps10.quartz.model.TaskScheduleJob">
    <result column="Room_ID" jdbcType="LONGNVARCHAR" property="roomId" />
    <result column="Team_ID" jdbcType="LONGNVARCHAR" property="teamId" />
    <result column="Member_ID" jdbcType="LONGNVARCHAR" property="memberId" />
    <result column="DeviceType_ID" jdbcType="LONGNVARCHAR" property="devicetypeId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    Job_ID, Create_Time, Update_Time, Job_Name, Job_Group, Job_Status, Cron_Expression, 
    Description, Bean_Class, IsConcurrent, Spring_Id, Method_Name, Job_Tyle, Job_SubType, 
    ACT_ID, Period, ValidUserID, Duty_Cycle
  </sql>
  <sql id="Blob_Column_List">
    Room_ID, Team_ID, Member_ID, DeviceType_ID
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.yaao.ps10.quartz.model.TaskScheduleJobExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from Task_Schedule_Job
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.yaao.ps10.quartz.model.TaskScheduleJobExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from Task_Schedule_Job
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from Task_Schedule_Job
    where Job_ID = #{jobId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from Task_Schedule_Job
    where Job_ID = #{jobId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.yaao.ps10.quartz.model.TaskScheduleJobExample">
    delete from Task_Schedule_Job
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yaao.ps10.quartz.model.TaskScheduleJob">
    insert into Task_Schedule_Job (Job_ID, Create_Time, Update_Time, 
      Job_Name, Job_Group, Job_Status, 
      Cron_Expression, Description, Bean_Class, 
      IsConcurrent, Spring_Id, Method_Name, 
      Job_Tyle, Job_SubType, ACT_ID, 
      Period, ValidUserID, Duty_Cycle, 
      Room_ID, Team_ID, Member_ID, 
      DeviceType_ID)
    values (#{jobId,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{jobName,jdbcType=VARCHAR}, #{jobGroup,jdbcType=VARCHAR}, #{jobStatus,jdbcType=VARCHAR}, 
      #{cronExpression,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, #{beanClass,jdbcType=VARCHAR}, 
      #{isconcurrent,jdbcType=VARCHAR}, #{springId,jdbcType=VARCHAR}, #{methodName,jdbcType=VARCHAR}, 
      #{jobTyle,jdbcType=VARCHAR}, #{jobSubtype,jdbcType=VARCHAR}, #{actId,jdbcType=VARCHAR}, 
      #{period,jdbcType=INTEGER}, #{validuserid,jdbcType=INTEGER}, #{dutyCycle,jdbcType=INTEGER}, 
      #{roomId,jdbcType=LONGNVARCHAR}, #{teamId,jdbcType=LONGNVARCHAR}, #{memberId,jdbcType=LONGNVARCHAR}, 
      #{devicetypeId,jdbcType=LONGNVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.yaao.ps10.quartz.model.TaskScheduleJob">
    insert into Task_Schedule_Job
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="jobId != null">
        Job_ID,
      </if>
      <if test="createTime != null">
        Create_Time,
      </if>
      <if test="updateTime != null">
        Update_Time,
      </if>
      <if test="jobName != null">
        Job_Name,
      </if>
      <if test="jobGroup != null">
        Job_Group,
      </if>
      <if test="jobStatus != null">
        Job_Status,
      </if>
      <if test="cronExpression != null">
        Cron_Expression,
      </if>
      <if test="description != null">
        Description,
      </if>
      <if test="beanClass != null">
        Bean_Class,
      </if>
      <if test="isconcurrent != null">
        IsConcurrent,
      </if>
      <if test="springId != null">
        Spring_Id,
      </if>
      <if test="methodName != null">
        Method_Name,
      </if>
      <if test="jobTyle != null">
        Job_Tyle,
      </if>
      <if test="jobSubtype != null">
        Job_SubType,
      </if>
      <if test="actId != null">
        ACT_ID,
      </if>
      <if test="period != null">
        Period,
      </if>
      <if test="validuserid != null">
        ValidUserID,
      </if>
      <if test="dutyCycle != null">
        Duty_Cycle,
      </if>
      <if test="roomId != null">
        Room_ID,
      </if>
      <if test="teamId != null">
        Team_ID,
      </if>
      <if test="memberId != null">
        Member_ID,
      </if>
      <if test="devicetypeId != null">
        DeviceType_ID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="jobId != null">
        #{jobId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="jobName != null">
        #{jobName,jdbcType=VARCHAR},
      </if>
      <if test="jobGroup != null">
        #{jobGroup,jdbcType=VARCHAR},
      </if>
      <if test="jobStatus != null">
        #{jobStatus,jdbcType=VARCHAR},
      </if>
      <if test="cronExpression != null">
        #{cronExpression,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="beanClass != null">
        #{beanClass,jdbcType=VARCHAR},
      </if>
      <if test="isconcurrent != null">
        #{isconcurrent,jdbcType=VARCHAR},
      </if>
      <if test="springId != null">
        #{springId,jdbcType=VARCHAR},
      </if>
      <if test="methodName != null">
        #{methodName,jdbcType=VARCHAR},
      </if>
      <if test="jobTyle != null">
        #{jobTyle,jdbcType=VARCHAR},
      </if>
      <if test="jobSubtype != null">
        #{jobSubtype,jdbcType=VARCHAR},
      </if>
      <if test="actId != null">
        #{actId,jdbcType=VARCHAR},
      </if>
      <if test="period != null">
        #{period,jdbcType=INTEGER},
      </if>
      <if test="validuserid != null">
        #{validuserid,jdbcType=INTEGER},
      </if>
      <if test="dutyCycle != null">
        #{dutyCycle,jdbcType=INTEGER},
      </if>
      <if test="roomId != null">
        #{roomId,jdbcType=LONGNVARCHAR},
      </if>
      <if test="teamId != null">
        #{teamId,jdbcType=LONGNVARCHAR},
      </if>
      <if test="memberId != null">
        #{memberId,jdbcType=LONGNVARCHAR},
      </if>
      <if test="devicetypeId != null">
        #{devicetypeId,jdbcType=LONGNVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yaao.ps10.quartz.model.TaskScheduleJobExample" resultType="java.lang.Long">
    select count(*) from Task_Schedule_Job
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update Task_Schedule_Job
    <set>
      <if test="record.jobId != null">
        Job_ID = #{record.jobId,jdbcType=BIGINT},
      </if>
      <if test="record.createTime != null">
        Create_Time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        Update_Time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.jobName != null">
        Job_Name = #{record.jobName,jdbcType=VARCHAR},
      </if>
      <if test="record.jobGroup != null">
        Job_Group = #{record.jobGroup,jdbcType=VARCHAR},
      </if>
      <if test="record.jobStatus != null">
        Job_Status = #{record.jobStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.cronExpression != null">
        Cron_Expression = #{record.cronExpression,jdbcType=VARCHAR},
      </if>
      <if test="record.description != null">
        Description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.beanClass != null">
        Bean_Class = #{record.beanClass,jdbcType=VARCHAR},
      </if>
      <if test="record.isconcurrent != null">
        IsConcurrent = #{record.isconcurrent,jdbcType=VARCHAR},
      </if>
      <if test="record.springId != null">
        Spring_Id = #{record.springId,jdbcType=VARCHAR},
      </if>
      <if test="record.methodName != null">
        Method_Name = #{record.methodName,jdbcType=VARCHAR},
      </if>
      <if test="record.jobTyle != null">
        Job_Tyle = #{record.jobTyle,jdbcType=VARCHAR},
      </if>
      <if test="record.jobSubtype != null">
        Job_SubType = #{record.jobSubtype,jdbcType=VARCHAR},
      </if>
      <if test="record.actId != null">
        ACT_ID = #{record.actId,jdbcType=VARCHAR},
      </if>
      <if test="record.period != null">
        Period = #{record.period,jdbcType=INTEGER},
      </if>
      <if test="record.validuserid != null">
        ValidUserID = #{record.validuserid,jdbcType=INTEGER},
      </if>
      <if test="record.dutyCycle != null">
        Duty_Cycle = #{record.dutyCycle,jdbcType=INTEGER},
      </if>
      <if test="record.roomId != null">
        Room_ID = #{record.roomId,jdbcType=LONGNVARCHAR},
      </if>
      <if test="record.teamId != null">
        Team_ID = #{record.teamId,jdbcType=LONGNVARCHAR},
      </if>
      <if test="record.memberId != null">
        Member_ID = #{record.memberId,jdbcType=LONGNVARCHAR},
      </if>
      <if test="record.devicetypeId != null">
        DeviceType_ID = #{record.devicetypeId,jdbcType=LONGNVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update Task_Schedule_Job
    set Job_ID = #{record.jobId,jdbcType=BIGINT},
      Create_Time = #{record.createTime,jdbcType=TIMESTAMP},
      Update_Time = #{record.updateTime,jdbcType=TIMESTAMP},
      Job_Name = #{record.jobName,jdbcType=VARCHAR},
      Job_Group = #{record.jobGroup,jdbcType=VARCHAR},
      Job_Status = #{record.jobStatus,jdbcType=VARCHAR},
      Cron_Expression = #{record.cronExpression,jdbcType=VARCHAR},
      Description = #{record.description,jdbcType=VARCHAR},
      Bean_Class = #{record.beanClass,jdbcType=VARCHAR},
      IsConcurrent = #{record.isconcurrent,jdbcType=VARCHAR},
      Spring_Id = #{record.springId,jdbcType=VARCHAR},
      Method_Name = #{record.methodName,jdbcType=VARCHAR},
      Job_Tyle = #{record.jobTyle,jdbcType=VARCHAR},
      Job_SubType = #{record.jobSubtype,jdbcType=VARCHAR},
      ACT_ID = #{record.actId,jdbcType=VARCHAR},
      Period = #{record.period,jdbcType=INTEGER},
      ValidUserID = #{record.validuserid,jdbcType=INTEGER},
      Duty_Cycle = #{record.dutyCycle,jdbcType=INTEGER},
      Room_ID = #{record.roomId,jdbcType=LONGNVARCHAR},
      Team_ID = #{record.teamId,jdbcType=LONGNVARCHAR},
      Member_ID = #{record.memberId,jdbcType=LONGNVARCHAR},
      DeviceType_ID = #{record.devicetypeId,jdbcType=LONGNVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update Task_Schedule_Job
    set Job_ID = #{record.jobId,jdbcType=BIGINT},
      Create_Time = #{record.createTime,jdbcType=TIMESTAMP},
      Update_Time = #{record.updateTime,jdbcType=TIMESTAMP},
      Job_Name = #{record.jobName,jdbcType=VARCHAR},
      Job_Group = #{record.jobGroup,jdbcType=VARCHAR},
      Job_Status = #{record.jobStatus,jdbcType=VARCHAR},
      Cron_Expression = #{record.cronExpression,jdbcType=VARCHAR},
      Description = #{record.description,jdbcType=VARCHAR},
      Bean_Class = #{record.beanClass,jdbcType=VARCHAR},
      IsConcurrent = #{record.isconcurrent,jdbcType=VARCHAR},
      Spring_Id = #{record.springId,jdbcType=VARCHAR},
      Method_Name = #{record.methodName,jdbcType=VARCHAR},
      Job_Tyle = #{record.jobTyle,jdbcType=VARCHAR},
      Job_SubType = #{record.jobSubtype,jdbcType=VARCHAR},
      ACT_ID = #{record.actId,jdbcType=VARCHAR},
      Period = #{record.period,jdbcType=INTEGER},
      ValidUserID = #{record.validuserid,jdbcType=INTEGER},
      Duty_Cycle = #{record.dutyCycle,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.yaao.ps10.quartz.model.TaskScheduleJob">
    update Task_Schedule_Job
    <set>
      <if test="createTime != null">
        Create_Time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        Update_Time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="jobName != null">
        Job_Name = #{jobName,jdbcType=VARCHAR},
      </if>
      <if test="jobGroup != null">
        Job_Group = #{jobGroup,jdbcType=VARCHAR},
      </if>
      <if test="jobStatus != null">
        Job_Status = #{jobStatus,jdbcType=VARCHAR},
      </if>
      <if test="cronExpression != null">
        Cron_Expression = #{cronExpression,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        Description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="beanClass != null">
        Bean_Class = #{beanClass,jdbcType=VARCHAR},
      </if>
      <if test="isconcurrent != null">
        IsConcurrent = #{isconcurrent,jdbcType=VARCHAR},
      </if>
      <if test="springId != null">
        Spring_Id = #{springId,jdbcType=VARCHAR},
      </if>
      <if test="methodName != null">
        Method_Name = #{methodName,jdbcType=VARCHAR},
      </if>
      <if test="jobTyle != null">
        Job_Tyle = #{jobTyle,jdbcType=VARCHAR},
      </if>
      <if test="jobSubtype != null">
        Job_SubType = #{jobSubtype,jdbcType=VARCHAR},
      </if>
      <if test="actId != null">
        ACT_ID = #{actId,jdbcType=VARCHAR},
      </if>
      <if test="period != null">
        Period = #{period,jdbcType=INTEGER},
      </if>
      <if test="validuserid != null">
        ValidUserID = #{validuserid,jdbcType=INTEGER},
      </if>
      <if test="dutyCycle != null">
        Duty_Cycle = #{dutyCycle,jdbcType=INTEGER},
      </if>
      <if test="roomId != null">
        Room_ID = #{roomId,jdbcType=LONGNVARCHAR},
      </if>
      <if test="teamId != null">
        Team_ID = #{teamId,jdbcType=LONGNVARCHAR},
      </if>
      <if test="memberId != null">
        Member_ID = #{memberId,jdbcType=LONGNVARCHAR},
      </if>
      <if test="devicetypeId != null">
        DeviceType_ID = #{devicetypeId,jdbcType=LONGNVARCHAR},
      </if>
    </set>
    where Job_ID = #{jobId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.yaao.ps10.quartz.model.TaskScheduleJob">
    update Task_Schedule_Job
    set Create_Time = #{createTime,jdbcType=TIMESTAMP},
      Update_Time = #{updateTime,jdbcType=TIMESTAMP},
      Job_Name = #{jobName,jdbcType=VARCHAR},
      Job_Group = #{jobGroup,jdbcType=VARCHAR},
      Job_Status = #{jobStatus,jdbcType=VARCHAR},
      Cron_Expression = #{cronExpression,jdbcType=VARCHAR},
      Description = #{description,jdbcType=VARCHAR},
      Bean_Class = #{beanClass,jdbcType=VARCHAR},
      IsConcurrent = #{isconcurrent,jdbcType=VARCHAR},
      Spring_Id = #{springId,jdbcType=VARCHAR},
      Method_Name = #{methodName,jdbcType=VARCHAR},
      Job_Tyle = #{jobTyle,jdbcType=VARCHAR},
      Job_SubType = #{jobSubtype,jdbcType=VARCHAR},
      ACT_ID = #{actId,jdbcType=VARCHAR},
      Period = #{period,jdbcType=INTEGER},
      ValidUserID = #{validuserid,jdbcType=INTEGER},
      Duty_Cycle = #{dutyCycle,jdbcType=INTEGER},
      Room_ID = #{roomId,jdbcType=LONGNVARCHAR},
      Team_ID = #{teamId,jdbcType=LONGNVARCHAR},
      Member_ID = #{memberId,jdbcType=LONGNVARCHAR},
      DeviceType_ID = #{devicetypeId,jdbcType=LONGNVARCHAR}
    where Job_ID = #{jobId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yaao.ps10.quartz.model.TaskScheduleJob">
    update Task_Schedule_Job
    set Create_Time = #{createTime,jdbcType=TIMESTAMP},
      Update_Time = #{updateTime,jdbcType=TIMESTAMP},
      Job_Name = #{jobName,jdbcType=VARCHAR},
      Job_Group = #{jobGroup,jdbcType=VARCHAR},
      Job_Status = #{jobStatus,jdbcType=VARCHAR},
      Cron_Expression = #{cronExpression,jdbcType=VARCHAR},
      Description = #{description,jdbcType=VARCHAR},
      Bean_Class = #{beanClass,jdbcType=VARCHAR},
      IsConcurrent = #{isconcurrent,jdbcType=VARCHAR},
      Spring_Id = #{springId,jdbcType=VARCHAR},
      Method_Name = #{methodName,jdbcType=VARCHAR},
      Job_Tyle = #{jobTyle,jdbcType=VARCHAR},
      Job_SubType = #{jobSubtype,jdbcType=VARCHAR},
      ACT_ID = #{actId,jdbcType=VARCHAR},
      Period = #{period,jdbcType=INTEGER},
      ValidUserID = #{validuserid,jdbcType=INTEGER},
      Duty_Cycle = #{dutyCycle,jdbcType=INTEGER}
    where Job_ID = #{jobId,jdbcType=BIGINT}
  </update>
</mapper>