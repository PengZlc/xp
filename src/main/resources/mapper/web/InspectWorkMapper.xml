<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yaao.ps10.web.mapper.InspectWorkMapper">
  <resultMap id="BaseResultMap" type="com.yaao.ps10.web.model.InspectWork">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="Name" jdbcType="VARCHAR" property="name"/>
    <result column="PIID" jdbcType="VARCHAR" property="piid"/>
    <result column="SiteId" jdbcType="INTEGER" property="siteid"/>
    <result column="RoomId" jdbcType="INTEGER" property="roomid"/>
    <result column="TeamId" jdbcType="INTEGER" property="teamid"/>
    <result column="UserId" jdbcType="VARCHAR" property="userid"/>
    <result column="Flag" jdbcType="INTEGER" property="flag"/>
    <result column="Note" jdbcType="VARCHAR" property="note"/>
    <result column="StartTime" jdbcType="TIMESTAMP" property="starttime"/>
    <result column="EndTime" jdbcType="TIMESTAMP" property="endtime" />
    <result column="RequiredStartTime" jdbcType="TIMESTAMP" property="requiredstarttime"/>
    <result column="RequiredEndTime" jdbcType="TIMESTAMP" property="requiredendtime"/>
    <result column="ActualStartTime" jdbcType="TIMESTAMP" property="actualstarttime"/>
    <result column="Grade" jdbcType="VARCHAR" property="grade"/>
    <result column="UserName" jdbcType="VARCHAR" property="username"/>
    <result column="ValidInstate" jdbcType="INTEGER" property="validinstate"/>
    <result column="ValidInFlag" jdbcType="INTEGER" property="validinflag"/>
    <result column="ValidInstruction" jdbcType="NVARCHAR" property="validinstruction"/>
    <result column="UserCount" jdbcType="INTEGER" property="usercount"/>
    <result column="IsTempInsp" jdbcType="INTEGER" property="istempinsp"/>
    <result column="BusinessKey" jdbcType="VARCHAR" property="businesskey"/>
    <result column="TaskDefKey" jdbcType="VARCHAR" property="taskdefkey"/>
    <result column="InitiateUser" jdbcType="VARCHAR" property="initiateuser"/>
    <result column="NfcCode" jdbcType="INTEGER" property="nfccode"/>
    <result column="ValidInUserId" jdbcType="INTEGER" property="validinuserid"/>
    <result column="UncompleteReason" jdbcType="VARCHAR" property="uncompletereason"/>
    <result column="OverTime" jdbcType="VARCHAR" property="overTime"/>
    <result column="Rate" jdbcType="VARCHAR" property="rate"/>
    <result column="SiteName" jdbcType="VARCHAR" property="sitename"/>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, Name, PIID, SiteId, RoomId, TeamId, UserId, Flag, Note, StartTime, EndTime, RequiredStartTime, 
    RequiredEndTime, ActualStartTime, Grade, UserName, ValidInstate, ValidInFlag, ValidInstruction, 
    UserCount, IsTempInsp, BusinessKey, TaskDefKey, InitiateUser, NfcCode, ValidInUserId, 
    UncompleteReason,overTime,rate,sitename
  </sql>
  <select id="getInspectWorkByMap" parameterType="java.util.Map" resultMap="BaseResultMap">
    SELECT inst.id,inst.Name,inst.PIID,CASE WHEN wiu.State IS NULL THEN inst.Flag ELSE wiu.State END AS Flag
    ,inst.BusinessKey,inst.TaskDefKey,inst.Grade,inst.RequiredEndTime,inst.InitiateUser,inst.NfcCode,
    (SELECT count(*) FROM OADataDb.dbo.NFC_DataTable  WHERE Process_Id = inst.PIID AND State = 1) AS ValidInFlag,
    (SELECT count(*) FROM OADataDb.dbo.NFC_DataTable ns WHERE ns.Process_Id = inst.PIID) AS ValidInstate
    ,inst.Note FROM OADataDb.dbo.WHY_Inspect inst  LEFT JOIN OADataDb.dbo.Why_Inspect_UserFlag wiu ON wiu.ProcessId=inst.PIID
    AND wiu.UserId=#{userId,jdbcType=VARCHAR}
    WHERE wiu.State IN(0,1) AND inst.UserId LIKE '%${userId}%' AND inst.UserName LIKE '%${userName}%'
    AND  DateDiff( Hour, inst.RequiredEndTime, GETDATE())&lt;1;
  </select>
  <select id="getCompInspectWorkByMap" parameterType="java.util.Map" resultMap="BaseResultMap">
   SELECT inst.id,inst.Name,inst.PIID,CASE WHEN wiu.State IS NULL THEN inst.Flag ELSE wiu.State END AS Flag
    ,inst.BusinessKey,inst.TaskDefKey,inst.Grade,inst.RequiredEndTime,inst.InitiateUser,inst.NfcCode,
    (SELECT count(*) FROM OADataDb.dbo.NFC_DataTable  WHERE Process_Id = inst.PIID AND State = 1) AS ValidInFlag,
    (SELECT count(*) FROM OADataDb.dbo.NFC_DataTable ns WHERE ns.Process_Id = inst.PIID) AS ValidInstate,
    inst.ActualStartTime,inst.EndTime,
    datediff(HOUR,inst.RequiredEndTime,CASE WHEN inst.EndTime IS NOT NULL THEN inst.EndTime ELSE GETDATE() END) as overTime,
    1 AS IsTempInsp,inst.Note,inst.RequiredStartTime,inst.RoomId,inst.SiteId,inst.StartTime,inst.TeamId,inst.UserCount,inst.UserId,inst.UserName,inst.ValidInstruction,inst.ValidInUserId
     FROM OADataDb.dbo.WHY_Inspect inst  LEFT JOIN OADataDb.dbo.Why_Inspect_UserFlag wiu ON wiu.ProcessId=inst.PIID
     AND wiu.UserId= #{userId,jdbcType=VARCHAR} WHERE 1=1
    AND inst.UserId LIKE '%${userId}%' AND inst.UserName LIKE '%${userName}%'
    <if test="flag!=null and flag==1">
      AND wiu.State IN(2)
    </if>
    <if test="flag!=null and flag==2">
      AND DateDiff( Hour, RequiredEndTime, GETDATE())>1 AND wiu.State!=2
    </if>
    ORDER BY inst.RequiredEndTime DESC
  </select>
  <select id="selectByExample" parameterType="com.yaao.ps10.web.model.InspectWorkExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from WHY_Inspect
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="getAllInspectWorkList" parameterType="com.yaao.ps10.web.model.InspectWorkExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from WHY_Inspect
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from WHY_Inspect
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from WHY_Inspect
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.yaao.ps10.web.model.InspectWorkExample">
    delete from WHY_Inspect
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yaao.ps10.web.model.InspectWork">
    insert into WHY_Inspect (id, Name, PIID, 
      SiteId, RoomId, TeamId, 
      UserId, Flag, Note, 
      StartTime, EndTime, RequiredStartTime, 
      RequiredEndTime, ActualStartTime, Grade, 
      UserName, ValidInstate, ValidInFlag, 
      ValidInstruction, UserCount, IsTempInsp, 
      BusinessKey, TaskDefKey, InitiateUser, 
      NfcCode, ValidInUserId, UncompleteReason
      )
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{piid,jdbcType=VARCHAR}, 
      #{siteid,jdbcType=INTEGER}, #{roomid,jdbcType=INTEGER}, #{teamid,jdbcType=INTEGER}, 
      #{userid,jdbcType=VARCHAR}, #{flag,jdbcType=INTEGER}, #{note,jdbcType=VARCHAR}, 
      #{starttime,jdbcType=TIMESTAMP}, #{endtime,jdbcType=TIMESTAMP}, #{requiredstarttime,jdbcType=TIMESTAMP}, 
      #{requiredendtime,jdbcType=TIMESTAMP}, #{actualstarttime,jdbcType=TIMESTAMP}, #{grade,jdbcType=VARCHAR}, 
      #{username,jdbcType=VARCHAR}, #{validinstate,jdbcType=INTEGER}, #{validinflag,jdbcType=INTEGER}, 
      #{validinstruction,jdbcType=NVARCHAR}, #{usercount,jdbcType=INTEGER}, #{istempinsp,jdbcType=INTEGER}, 
      #{businesskey,jdbcType=VARCHAR}, #{taskdefkey,jdbcType=VARCHAR}, #{initiateuser,jdbcType=VARCHAR}, 
      #{nfccode,jdbcType=INTEGER}, #{validinuserid,jdbcType=INTEGER}, #{uncompletereason,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.yaao.ps10.web.model.InspectWork">
    insert into WHY_Inspect
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        Name,
      </if>
      <if test="piid != null">
        PIID,
      </if>
      <if test="siteid != null">
        SiteId,
      </if>
      <if test="roomid != null">
        RoomId,
      </if>
      <if test="teamid != null">
        TeamId,
      </if>
      <if test="userid != null">
        UserId,
      </if>
      <if test="flag != null">
        Flag,
      </if>
      <if test="note != null">
        Note,
      </if>
      <if test="starttime != null">
        StartTime,
      </if>
      <if test="endtime != null">
        EndTime,
      </if>
      <if test="requiredstarttime != null">
        RequiredStartTime,
      </if>
      <if test="requiredendtime != null">
        RequiredEndTime,
      </if>
      <if test="actualstarttime != null">
        ActualStartTime,
      </if>
      <if test="grade != null">
        Grade,
      </if>
      <if test="username != null">
        UserName,
      </if>
      <if test="validinstate != null">
        ValidInstate,
      </if>
      <if test="validinflag != null">
        ValidInFlag,
      </if>
      <if test="validinstruction != null">
        ValidInstruction,
      </if>
      <if test="usercount != null">
        UserCount,
      </if>
      <if test="istempinsp != null">
        IsTempInsp,
      </if>
      <if test="businesskey != null">
        BusinessKey,
      </if>
      <if test="taskdefkey != null">
        TaskDefKey,
      </if>
      <if test="initiateuser != null">
        InitiateUser,
      </if>
      <if test="nfccode != null">
        NfcCode,
      </if>
      <if test="validinuserid != null">
        ValidInUserId,
      </if>
      <if test="uncompletereason != null">
        UncompleteReason,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="piid != null">
        #{piid,jdbcType=VARCHAR},
      </if>
      <if test="siteid != null">
        #{siteid,jdbcType=INTEGER},
      </if>
      <if test="roomid != null">
        #{roomid,jdbcType=INTEGER},
      </if>
      <if test="teamid != null">
        #{teamid,jdbcType=INTEGER},
      </if>
      <if test="userid != null">
        #{userid,jdbcType=VARCHAR},
      </if>
      <if test="flag != null">
        #{flag,jdbcType=INTEGER},
      </if>
      <if test="note != null">
        #{note,jdbcType=VARCHAR},
      </if>
      <if test="starttime != null">
        #{starttime,jdbcType=TIMESTAMP},
      </if>
      <if test="endtime != null">
        #{endtime,jdbcType=TIMESTAMP},
      </if>
      <if test="requiredstarttime != null">
        #{requiredstarttime,jdbcType=TIMESTAMP},
      </if>
      <if test="requiredendtime != null">
        #{requiredendtime,jdbcType=TIMESTAMP},
      </if>
      <if test="actualstarttime != null">
        #{actualstarttime,jdbcType=TIMESTAMP},
      </if>
      <if test="grade != null">
        #{grade,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="validinstate != null">
        #{validinstate,jdbcType=INTEGER},
      </if>
      <if test="validinflag != null">
        #{validinflag,jdbcType=INTEGER},
      </if>
      <if test="validinstruction != null">
        #{validinstruction,jdbcType=NVARCHAR},
      </if>
      <if test="usercount != null">
        #{usercount,jdbcType=INTEGER},
      </if>
      <if test="istempinsp != null">
        #{istempinsp,jdbcType=INTEGER},
      </if>
      <if test="businesskey != null">
        #{businesskey,jdbcType=VARCHAR},
      </if>
      <if test="taskdefkey != null">
        #{taskdefkey,jdbcType=VARCHAR},
      </if>
      <if test="initiateuser != null">
        #{initiateuser,jdbcType=VARCHAR},
      </if>
      <if test="nfccode != null">
        #{nfccode,jdbcType=INTEGER},
      </if>
      <if test="validinuserid != null">
        #{validinuserid,jdbcType=INTEGER},
      </if>
      <if test="uncompletereason != null">
        #{uncompletereason,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yaao.ps10.web.model.InspectWorkExample" resultType="java.lang.Long">
    select count(*) from WHY_Inspect
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update WHY_Inspect
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        Name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.piid != null">
        PIID = #{record.piid,jdbcType=VARCHAR},
      </if>
      <if test="record.siteid != null">
        SiteId = #{record.siteid,jdbcType=INTEGER},
      </if>
      <if test="record.roomid != null">
        RoomId = #{record.roomid,jdbcType=INTEGER},
      </if>
      <if test="record.teamid != null">
        TeamId = #{record.teamid,jdbcType=INTEGER},
      </if>
      <if test="record.userid != null">
        UserId = #{record.userid,jdbcType=VARCHAR},
      </if>
      <if test="record.flag != null">
        Flag = #{record.flag,jdbcType=INTEGER},
      </if>
      <if test="record.note != null">
        Note = #{record.note,jdbcType=VARCHAR},
      </if>
      <if test="record.starttime != null">
        StartTime = #{record.starttime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.endtime != null">
        EndTime = #{record.endtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.requiredstarttime != null">
        RequiredStartTime = #{record.requiredstarttime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.requiredendtime != null">
        RequiredEndTime = #{record.requiredendtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.actualstarttime != null">
        ActualStartTime = #{record.actualstarttime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.grade != null">
        Grade = #{record.grade,jdbcType=VARCHAR},
      </if>
      <if test="record.username != null">
        UserName = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.validinstate != null">
        ValidInstate = #{record.validinstate,jdbcType=INTEGER},
      </if>
      <if test="record.validinflag != null">
        ValidInFlag = #{record.validinflag,jdbcType=INTEGER},
      </if>
      <if test="record.validinstruction != null">
        ValidInstruction = #{record.validinstruction,jdbcType=NVARCHAR},
      </if>
      <if test="record.usercount != null">
        UserCount = #{record.usercount,jdbcType=INTEGER},
      </if>
      <if test="record.istempinsp != null">
        IsTempInsp = #{record.istempinsp,jdbcType=INTEGER},
      </if>
      <if test="record.businesskey != null">
        BusinessKey = #{record.businesskey,jdbcType=VARCHAR},
      </if>
      <if test="record.taskdefkey != null">
        TaskDefKey = #{record.taskdefkey,jdbcType=VARCHAR},
      </if>
      <if test="record.initiateuser != null">
        InitiateUser = #{record.initiateuser,jdbcType=VARCHAR},
      </if>
      <if test="record.nfccode != null">
        NfcCode = #{record.nfccode,jdbcType=INTEGER},
      </if>
      <if test="record.validinuserid != null">
        ValidInUserId = #{record.validinuserid,jdbcType=INTEGER},
      </if>
      <if test="record.uncompletereason != null">
        UncompleteReason = #{record.uncompletereason,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update WHY_Inspect
    set id = #{record.id,jdbcType=INTEGER},
      Name = #{record.name,jdbcType=VARCHAR},
      PIID = #{record.piid,jdbcType=VARCHAR},
      SiteId = #{record.siteid,jdbcType=INTEGER},
      RoomId = #{record.roomid,jdbcType=INTEGER},
      TeamId = #{record.teamid,jdbcType=INTEGER},
      UserId = #{record.userid,jdbcType=VARCHAR},
      Flag = #{record.flag,jdbcType=INTEGER},
      Note = #{record.note,jdbcType=VARCHAR},
      StartTime = #{record.starttime,jdbcType=TIMESTAMP},
      EndTime = #{record.endtime,jdbcType=TIMESTAMP},
      RequiredStartTime = #{record.requiredstarttime,jdbcType=TIMESTAMP},
      RequiredEndTime = #{record.requiredendtime,jdbcType=TIMESTAMP},
      ActualStartTime = #{record.actualstarttime,jdbcType=TIMESTAMP},
      Grade = #{record.grade,jdbcType=VARCHAR},
      UserName = #{record.username,jdbcType=VARCHAR},
      ValidInstate = #{record.validinstate,jdbcType=INTEGER},
      ValidInFlag = #{record.validinflag,jdbcType=INTEGER},
      ValidInstruction = #{record.validinstruction,jdbcType=NVARCHAR},
      UserCount = #{record.usercount,jdbcType=INTEGER},
      IsTempInsp = #{record.istempinsp,jdbcType=INTEGER},
      BusinessKey = #{record.businesskey,jdbcType=VARCHAR},
      TaskDefKey = #{record.taskdefkey,jdbcType=VARCHAR},
      InitiateUser = #{record.initiateuser,jdbcType=VARCHAR},
      NfcCode = #{record.nfccode,jdbcType=INTEGER},
      ValidInUserId = #{record.validinuserid,jdbcType=INTEGER},
      UncompleteReason = #{record.uncompletereason,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.yaao.ps10.web.model.InspectWork">
    update WHY_Inspect
    <set>
      <if test="name != null">
        Name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="piid != null">
        PIID = #{piid,jdbcType=VARCHAR},
      </if>
      <if test="siteid != null">
        SiteId = #{siteid,jdbcType=INTEGER},
      </if>
      <if test="roomid != null">
        RoomId = #{roomid,jdbcType=INTEGER},
      </if>
      <if test="teamid != null">
        TeamId = #{teamid,jdbcType=INTEGER},
      </if>
      <if test="userid != null">
        UserId = #{userid,jdbcType=VARCHAR},
      </if>
      <if test="flag != null">
        Flag = #{flag,jdbcType=INTEGER},
      </if>
      <if test="note != null">
        Note = #{note,jdbcType=VARCHAR},
      </if>
      <if test="starttime != null">
        StartTime = #{starttime,jdbcType=TIMESTAMP},
      </if>
      <if test="endtime != null">
        EndTime = #{endtime,jdbcType=TIMESTAMP},
      </if>
      <if test="requiredstarttime != null">
        RequiredStartTime = #{requiredstarttime,jdbcType=TIMESTAMP},
      </if>
      <if test="requiredendtime != null">
        RequiredEndTime = #{requiredendtime,jdbcType=TIMESTAMP},
      </if>
      <if test="actualstarttime != null">
        ActualStartTime = #{actualstarttime,jdbcType=TIMESTAMP},
      </if>
      <if test="grade != null">
        Grade = #{grade,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        UserName = #{username,jdbcType=VARCHAR},
      </if>
      <if test="validinstate != null">
        ValidInstate = #{validinstate,jdbcType=INTEGER},
      </if>
      <if test="validinflag != null">
        ValidInFlag = #{validinflag,jdbcType=INTEGER},
      </if>
      <if test="validinstruction != null">
        ValidInstruction = #{validinstruction,jdbcType=NVARCHAR},
      </if>
      <if test="usercount != null">
        UserCount = #{usercount,jdbcType=INTEGER},
      </if>
      <if test="istempinsp != null">
        IsTempInsp = #{istempinsp,jdbcType=INTEGER},
      </if>
      <if test="businesskey != null">
        BusinessKey = #{businesskey,jdbcType=VARCHAR},
      </if>
      <if test="taskdefkey != null">
        TaskDefKey = #{taskdefkey,jdbcType=VARCHAR},
      </if>
      <if test="initiateuser != null">
        InitiateUser = #{initiateuser,jdbcType=VARCHAR},
      </if>
      <if test="nfccode != null">
        NfcCode = #{nfccode,jdbcType=INTEGER},
      </if>
      <if test="validinuserid != null">
        ValidInUserId = #{validinuserid,jdbcType=INTEGER},
      </if>
      <if test="uncompletereason != null">
        UncompleteReason = #{uncompletereason,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yaao.ps10.web.model.InspectWork">
    update WHY_Inspect
    set Name = #{name,jdbcType=VARCHAR},
      PIID = #{piid,jdbcType=VARCHAR},
      SiteId = #{siteid,jdbcType=INTEGER},
      RoomId = #{roomid,jdbcType=INTEGER},
      TeamId = #{teamid,jdbcType=INTEGER},
      UserId = #{userid,jdbcType=VARCHAR},
      Flag = #{flag,jdbcType=INTEGER},
      Note = #{note,jdbcType=VARCHAR},
      StartTime = #{starttime,jdbcType=TIMESTAMP},
      EndTime = #{endtime,jdbcType=TIMESTAMP},
      RequiredStartTime = #{requiredstarttime,jdbcType=TIMESTAMP},
      RequiredEndTime = #{requiredendtime,jdbcType=TIMESTAMP},
      ActualStartTime = #{actualstarttime,jdbcType=TIMESTAMP},
      Grade = #{grade,jdbcType=VARCHAR},
      UserName = #{username,jdbcType=VARCHAR},
      ValidInstate = #{validinstate,jdbcType=INTEGER},
      ValidInFlag = #{validinflag,jdbcType=INTEGER},
      ValidInstruction = #{validinstruction,jdbcType=NVARCHAR},
      UserCount = #{usercount,jdbcType=INTEGER},
      IsTempInsp = #{istempinsp,jdbcType=INTEGER},
      BusinessKey = #{businesskey,jdbcType=VARCHAR},
      TaskDefKey = #{taskdefkey,jdbcType=VARCHAR},
      InitiateUser = #{initiateuser,jdbcType=VARCHAR},
      NfcCode = #{nfccode,jdbcType=INTEGER},
      ValidInUserId = #{validinuserid,jdbcType=INTEGER},
      UncompleteReason = #{uncompletereason,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateInspectWork" parameterType="map">
    update WHY_Inspect
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        Name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.piid != null">
        PIID = #{record.piid,jdbcType=VARCHAR},
      </if>
      <if test="record.siteid != null">
        SiteId = #{record.siteid,jdbcType=INTEGER},
      </if>
      <if test="record.roomid != null">
        RoomId = #{record.roomid,jdbcType=INTEGER},
      </if>
      <if test="record.teamid != null">
        TeamId = #{record.teamid,jdbcType=INTEGER},
      </if>
      <if test="record.userid != null">
        UserId = #{record.userid,jdbcType=VARCHAR},
      </if>
      <if test="record.flag != null">
        Flag = #{record.flag,jdbcType=INTEGER},
      </if>
      <if test="record.note != null">
        Note = #{record.note,jdbcType=VARCHAR},
      </if>
      <if test="record.starttime != null">
        StartTime = #{record.starttime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.endtime != null">
        EndTime = #{record.endtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.requiredstarttime != null">
        RequiredStartTime = #{record.requiredstarttime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.requiredendtime != null">
        RequiredEndTime = #{record.requiredendtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.actualstarttime != null">
        ActualStartTime = #{record.actualstarttime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.grade != null">
        Grade = #{record.grade,jdbcType=VARCHAR},
      </if>
      <if test="record.username != null">
        UserName = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.validinstate != null">
        ValidInstate = #{record.validinstate,jdbcType=INTEGER},
      </if>
      <if test="record.validinflag != null">
        ValidInFlag = #{record.validinflag,jdbcType=INTEGER},
      </if>
      <if test="record.validinstruction != null">
        ValidInstruction = #{record.validinstruction,jdbcType=NVARCHAR},
      </if>
      <if test="record.usercount != null">
        UserCount = #{record.usercount,jdbcType=INTEGER},
      </if>
      <if test="record.istempinsp != null">
        IsTempInsp = #{record.istempinsp,jdbcType=INTEGER},
      </if>
      <if test="record.businesskey != null">
        BusinessKey = #{record.businesskey,jdbcType=VARCHAR},
      </if>
      <if test="record.taskdefkey != null">
        TaskDefKey = #{record.taskdefkey,jdbcType=VARCHAR},
      </if>
      <if test="record.initiateuser != null">
        InitiateUser = #{record.initiateuser,jdbcType=VARCHAR},
      </if>
      <if test="record.nfccode != null">
        NfcCode = #{record.nfccode,jdbcType=INTEGER},
      </if>
      <if test="record.validinuserid != null">
        ValidInUserId = #{record.validinuserid,jdbcType=INTEGER},
      </if>
      <if test="record.uncompletereason != null">
        UncompleteReason = #{record.uncompletereason,jdbcType=VARCHAR},
      </if>
    </set>
    where PIID = #{record.piid,jdbcType=VARCHAR}
  </update>
  <select id="getWaitAssessmentByMap" parameterType="java.util.Map" resultMap="BaseResultMap">
    select  id,UserName,Name,ValidInstate,DATEDIFF(HOUR,EndTime,RequiredEndTime),(CONVERT(varchar(100), EndTime, 20)) EndTime,PIID,
	    CASE WHEN NfcCode IS NULL THEN 2 ELSE NfcCode END AS NfcCode from WHY_Inspect where 1=1  and Flag=2 AND  datediff(day,EndTime,getdate())&lt;30
	<if test="roleId>91 and deptId!=13">
      AND IsTempInsp != 2 AND SUBSTRING (UserId,1,(charindex(',', UserId) - 1)) IN
      (SELECT MemberID FROM PSBaseDb.dbo.UserTable us WHERE us.deptid3 = #{deptId,jdbcType=INTEGER})
    </if>
    <if test="roleId==91">
      AND UserId + ',' like '%${userId},%'
    </if>
    <if test="flag==0">
      AND PIID IN (SELECT DISTINCT(ProcessId) FROM OADataDb.dbo.KV_Evaluate)
    </if>
  </select>
  <select id="getSpecialWaitAssessmentByMap" parameterType="java.util.Map" resultMap="BaseResultMap">
    select  id,UserName,Name,ValidInstate,DATEDIFF(HOUR,EndTime,RequiredEndTime),(CONVERT(varchar(100), EndTime, 20)) EndTime,PIID,
        CASE WHEN NfcCode IS NULL THEN 2 ELSE NfcCode END AS NfcCode from WHY_Inspect where 1=1 and Flag=2 AND  datediff(day,EndTime,getdate())&lt;30
        AND ValidInUserId=#{userId}
    <if test="roleId>91 and deptId!=13">
      AND IsTempInsp != 2 AND SUBSTRING (UserId,1,(charindex(',', UserId) - 1)) IN
      (SELECT MemberID FROM PSBaseDb.dbo.UserTable us WHERE us.deptid3 = #{deptId,jdbcType=INTEGER})
    </if>
    <if test="roleId==91">
      AND UserId + ',' like '%${userId},%'
    </if>
    <if test="flag==0">
      AND PIID IN (SELECT DISTINCT(ProcessId) FROM OADataDb.dbo.KV_Evaluate)
    </if>
  </select>
  <select id="getInspectListByMap" parameterType="java.util.Map" resultMap="BaseResultMap">
    SELECT  case when Grade=1 then '高' when Grade=2 then '中' else '低' end as Grade,(SELECT
    cast(round(CAST(count(*) as FLOAT)/(SELECT CASE WHEN COUNT (*)=0 THEN 100 ELSE COUNT(*)END
    FROM OADataDb.dbo.WHY_Inspect_Room_State sta
    WHERE sta.PIID=insp.PIID )*100,2) as varchar(20))'%' FROM OADataDb.dbo.WHY_Inspect_Room_State rom
    WHERE rom.PIID=insp.PIID AND rom.State=2) AS Rate,ValidInFlag,insp.[id],insp.PIID,insp.[Name],insp.[SiteId],insp.[UserName], insp.[EndTime],
    insp.[RequiredStartTime], insp.[RequiredEndTime],insp.[StartTime],ddt.TeamName AS SiteName FROM
    OADataDb.dbo.WHY_Inspect insp LEFT JOIN OADataDb.dbo.DutyTeam_Department ddt ON ddt.TeamId=insp.SiteId where 1=1
    <if test="siteId != null and siteId !=-1">
      and insp.SiteId = #{siteId,jdbcType=INTEGER}
    </if>
    <if test="startTime != null and startTime != ''">
      and insp.RequiredStartTime &gt;= #{startTime,jdbcType=TIMESTAMP}
    </if>
    <if test="endTime != null and endTime != ''">
      and insp.RequiredEndTime &lt;= #{endTime,jdbcType=TIMESTAMP}
    </if>
    ORDER BY insp.RequiredEndTime DESC
  </select>
</mapper>